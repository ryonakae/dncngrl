@import "~bourbon";
@import "_config";
@import "_mixin";

// reset / normalize
@import "lib/reset";
@import "lib/swiper";

// reset box-sizing
html {
  box-sizing: border-box;
}
*,
*:before,
*:after {
  box-sizing: inherit;
}


// web fonts
// webpackのaliasで解決するために、`~fonts/...`というパスにする
@include font-face("Neue Frutiger", "~fonts/NeueFrutiger-Regular", $file-formats: woff);
@include font-face("Neue Frutiger", "~fonts/NeueFrutiger-Italic", normal, italic, $file-formats: woff);
@include font-face("Neue Frutiger", "~fonts/NeueFrutiger-Bold", bold, $file-formats: woff);
@include font-face("Neue Frutiger", "~fonts/NeueFrutiger-BoldIt", bold, italic, $file-formats: woff);
@include font-face("Noto Sans Japanese", "~fonts/NotoSansJP-Regular", $file-formats: woff);
@include font-face("Noto Sans Japanese", "~fonts/NotoSansJP-Bold", bold, $file-formats: woff);


html {
  font-size: 62.5%;
}


body {
  background-color: $bgColor_default;
  background-image: url('~images/bg.jpg');
  background-size: 400px 400px;
  font-family: $fontFamily_default;
  font-size: $fontSize_default;
  line-height: $lineHeight_default;
  letter-spacing: $letterSpacing_default;
  font-kerning: normal;
  font-feature-settings: "palt" on;
  color: $textColor_default;
  word-wrap: break-word;
  overflow-wrap: break-word;
  -webkit-text-size-adjust: 100%;

  & ::-moz-selection {
    background-color: rgba($textColor_default, 0.85);
    color: $bgColor_default;
  }
  & ::selection {
    background-color: rgba($textColor_default, 0.85);
    color: $bgColor_default;
  }

  @include mq(
    "only screen and (-webkit-min-device-pixel-ratio: 1.5),
    only screen and (min--moz-device-pixel-ratio: 1.5),
    only screen and (-o-min-device-pixel-ratio: 1.5/1),
    only screen and (min-resolution: 144dpi),
    only screen and (min-resolution: 1.5dppx)"
  ) {
    -webkit-font-smoothing: antialiased;
  }
}


%link {
  color: inherit;
  text-decoration: underline;

  body.is-pc & {
    &:hover {
      text-decoration: none;
    }
  }
}


a {
  @extend %link;
}


h1, h2, h3, h4, h5, h6 {
  line-height: $lineHeight_title;
}


// glitch
@keyframes glitch_flash {
  5%  { opacity: 1 }
  7%  { opacity: 0 }
  8%  { opacity: 1 }
  60% { opacity: 1 }
  61% { opacity: 0 }
  62% { opacity: 1 }
}
@keyframes glitch_shift_1 {
  0%   { transform: translate(4px, 2px); }
  20%  { transform: translate(-5px, -2px); }
  40%  { transform: translate(2px, 1px); }
  60%  { transform: translate(-2px, -1px); }
  80%  { transform: translate(-4px, 1px); }
}
@keyframes glitch_shift_2 {
  0%   { transform: translate(2px, -1px); }
  25%  { transform: translate(-4px, 1px); }
  50%  { transform: translate(-3px, -1px); }
  75%  { transform: translate(5px, 1px); }
  100% { transform: translate(2px, -2px); }
}
@keyframes glitch_shift_3 {
  0%   { transform: translate(-2px, 1px); }
  33%  { transform: translate(7px, -1px); }
  66%  { transform: translate(-1px, -2px); }
  88%  { transform: translate(3px, 2px); }
  100% { transform: translate(-2px, -1px); }
}
@keyframes glitch_image_1 {
  0%   { mix-blend-mode: color; }
  25%  { mix-blend-mode: luminosity; }
  50%  { mix-blend-mode: difference; }
  75%  { mix-blend-mode: hue; }
  100% { mix-blend-mode: screen; }
}
@keyframes glitch_image_2 {
  0%   { mix-blend-mode: hue; }
  25%  { mix-blend-mode: saturation; }
  50%  { mix-blend-mode: difference; }
  75%  { mix-blend-mode: luminosity; }
  100% { mix-blend-mode: color; }
}
@keyframes glitch_image_3 {
  0%   { mix-blend-mode: difference; }
  25%  { mix-blend-mode: luminosity; }
  50%  { mix-blend-mode: color; }
  75%  { mix-blend-mode: saturation; }
  100% { mix-blend-mode: hue; }
}


.glitch {
  animation-duration: .12s;
  animation-timing-function: linear;
  position: relative;

  &.pattern-1,
  &.pattern-2,
  &.pattern-3 {
    animation-name: glitch_flash;
  }

  &-item {
    animation-duration: .12s;
    animation-timing-function: linear;
    mix-blend-mode: difference;
    position: absolute;
    top: 0;
    left: 0;

    &.blue { background-color: rgb(0,0,255); }
    &.green { background-color: rgb(0,255,0); }
    &.red { background-color: rgb(255,0,0); }

    .pattern-1 & {
      &.blue { animation-name: glitch_shift_1; }
      &.green { animation-name: glitch_shift_2; }
      &.red { animation-name: glitch_shift_3; }
    }
    .pattern-2 & {
      &.blue { animation-name: glitch_shift_3; }
      &.green { animation-name: glitch_shift_1; }
      &.red { animation-name: glitch_shift_2; }
    }
    .pattern-3 & {
      &.blue { animation-name: glitch_shift_2; }
      &.green { animation-name: glitch_shift_3; }
      &.red { animation-name: glitch_shift_1; }
    }
  }

  &-image {
    animation-duration: .12s;
    animation-timing-function: linear;
    mix-blend-mode: multiply;
    vertical-align: top;

    .pattern-1 & { animation-name: glitch_image_1; }
    .pattern-2 & { animation-name: glitch_image_2; }
    .pattern-3 & { animation-name: glitch_image_3; }
  }
}
